version: '2'

networks:
  SITENAME_onlyoffice:
    driver: 'bridge'

  TRAEFIKNETWORK:
    external: true

services:
  SITENAME_onlyoffice-documentserver-data:
    container_name: SITENAME_onlyoffice-documentserver-data
    image: onlyoffice/documentserver:6.1.0
    environment:
      - ONLYOFFICE_DATA_CONTAINER=true
      - DB_TYPE=postgres
      - DB_HOST=SITENAME_onlyoffice-postgresql
      - DB_PORT=5432
      - DB_NAME=$DB_NAME
      #Set the DB_USER and DB_PWD below to the POSTGRES_USER and the POSTGRES_PASSWORD values of the onlyoffice-postgresql container below
      - DB_USER=$DB_USER
      - DB_PWD=$DB_PWD
      - AMQP_URI=amqp://guest:guest@SITENAME_onlyoffice-rabbitmq
      - REDIS_SERVER_HOST=SITENAME_onlyoffice-redis
      - REDIS_SERVER_PORT=6379
      # Uncomment strings below to enable the JSON Web Token validation.
      - JWT_ENABLED=true
      - JWT_SECRET=$JWT_SECRET
      - JWT_HEADER=Authorization
      - JWT_IN_BODY=true
    stdin_open: true
    restart: always
    networks:
      - SITENAME_onlyoffice
    volumes:
       - /etc/onlyoffice
       - /var/www/onlyoffice/Data
       - /var/log/onlyoffice
       - /var/lib/onlyoffice/documentserver/App_Data/cache/files
       - /var/www/onlyoffice/documentserver-example/public/files
       - /usr/share/fonts

  SITENAME_onlyoffice-documentserver:
    container_name: SITENAME_onlyoffice-documentserver
    image: onlyoffice/documentserver:6.1.0
    depends_on:
      - SITENAME_onlyoffice-documentserver-data
      - SITENAME_onlyoffice-postgresql
      - SITENAME_onlyoffice-redis
      - SITENAME_onlyoffice-rabbitmq
    environment:
      - ONLYOFFICE_DATA_CONTAINER_HOST=SITENAME_onlyoffice-documentserver-data
      - BALANCE=uri depth 3
      - EXCLUDE_PORTS=443
      - HTTP_CHECK=GET /healthcheck
      - EXTRA_SETTINGS=http-check expect string true
      # Uncomment the string below to redirect HTTP request to HTTPS request.
      #- FORCE_SSL=true
    stdin_open: true
    restart: always
    networks:
      - SITENAME_onlyoffice
      - TRAEFIKNETWORK
    expose:
      - '80'
    volumes_from:
     - SITENAME_onlyoffice-documentserver-data

    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=TRAEFIKNETWORK"

      # Routers
      - "traefik.http.routers.onlyoffice-SITENAME.entrypoints=http"
      - "traefik.http.routers.onlyoffice-SITENAME.rule=Host(`$HOST.$DOMAIN`)"
      - "traefik.http.routers.onlyoffice-SITENAME.middlewares=onlyoffice-https-redirect-SITENAME"
      #Define Routers for onlyoffice-sslheaders-SITENAME and onlyoffice-cors-SITENAME
      - "traefik.http.routers.onlyoffice-secure-SITENAME.middlewares=onlyoffice-sslheaders-SITENAME, onlyoffice-cors-SITENAME"
      - "traefik.http.routers.onlyoffice-secure-SITENAME.entrypoints=https"
      - "traefik.http.routers.onlyoffice-secure-SITENAME.rule=Host(`$HOST.$DOMAIN`)"
      - "traefik.http.routers.onlyoffice-secure-SITENAME.tls=true"
      #- "traefik.http.routers.onlyoffice-secure-SITENAME.tls.certresolver=le"
      - "traefik.http.routers.onlyoffice-secure-SITENAME.service=onlyoffice-SITENAME"

      # Service definition
      - "traefik.http.services.onlyoffice-SITENAME.loadbalancer.server.port=80"

      # Middleware definitions
      - "traefik.http.middlewares.onlyoffice-https-redirect-SITENAME.redirectscheme.scheme=https"
      # Headers for onlyoffice, https://github.com/ONLYOFFICE/onlyoffice-nextcloud/issues/151
      - "traefik.http.middlewares.onlyoffice-sslheaders-SITENAME.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.onlyoffice-cors-SITENAME.headers.accessControlAllowOrigin=*"

      # Watchtower
      #- "com.centurylinklabs.watchtower.enable=true"

  SITENAME_onlyoffice-redis:
    container_name: SITENAME_onlyoffice-redis
    image: redis
    restart: always
    networks:
      - SITENAME_onlyoffice
    expose:
      - '6379'

  SITENAME_onlyoffice-rabbitmq:
    container_name: SITENAME_onlyoffice-rabbitmq
    image: rabbitmq
    restart: always
    networks:
      - SITENAME_onlyoffice
    expose:
      - '5672'

  SITENAME_onlyoffice-postgresql:
    container_name: SITENAME_onlyoffice-postgresql
    image: postgres:9.5
    environment:
      - POSTGRES_DB=$DB_NAME
#Set the POSTGRES_USER and the POSTGRES_PASSWORD below to the DB_USER and DB_PWD values of the onlyoffice-documentserver-data container above
      - POSTGRES_USER=$DB_USER
      - POSTGRES_PASSWORD=$DB_PWD
    networks:
      - SITENAME_onlyoffice
    restart: always
    expose:
      - '5432'
    volumes:
      - postgresql_data:/var/lib/postgresql



volumes:
    postgresql_data:
