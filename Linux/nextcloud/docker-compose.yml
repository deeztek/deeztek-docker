version: '2'

networks:
  proxy:
    external: true


services:

  nextcloud_db:
    image: linuxserver/mariadb
    container_name: nextcloud_db
    logging:
      options:
        max-size: 10m
    environment:
      - TZ=${TIMEZONE}
      - PUID=${PUID}
      - PGID=${GUID}
    env_file:
      - db.env
    volumes:
      - db:/config
      - db_backups:/db_backups
    networks:
      - proxy
    restart: unless-stopped

  ofelia:
    image: 'mcuadros/ofelia:latest'
    container_name: nextcloud_db_cron
    logging:
      options:
        max-size: 10m
    environment:
      - "TZ=$TIMEZONE"
    volumes:
      # the ofelia config file
      - ./ofelia_config/config.ini:/etc/ofelia/config.ini
      # your docker reg credentials
      #- /home/centos/.docker/config.json:/root/.docker/config.json
      # the docker socket so ofelia can docker run ...
      - /var/run/docker.sock:/var/run/docker.sock
      # if you want to write a log for eace execution and view logs on the log -> I recommend to set this value
      - ./ofelia_logs:/tmp/logs
    restart: unless-stopped

  nextcloud_redis:
    image: redis
    container_name: nextcloud_redis
    logging:
      options:
        max-size: 10m
    networks:
      - proxy
    volumes:
      - redis:/var/lib/redis
    command: redis-server --requirepass $REDIS_PASSWORD
    restart: unless-stopped

  nextcloud:
    image: nextcloud:latest
    container_name: nextcloud
    logging:
      options:
        max-size: 10m
#Uncomment below if you wish to build nextcloud container with SMB/CIFS using the included Dockerfile.
    #build: .
    networks:
      - proxy
    volumes:
      - nextcloud:/var/www/html
#Uncomment and then uncomment and set smb connection parameters under the volumes section below
      #- smb:/mnt/smb

    environment:
      - TZ=$TIMEZONE
      - MYSQL_HOST=nextcloud_db
      - REDIS_HOST=nextcloud_redis
      - REDIS_HOST_PASSWORD=${REDIS_PASSWORD}
      - NEXTCLOUD_ADMIN_USER=${NEXTCLOUD_ADMIN_USER}
      - NEXTCLOUD_ADMIN_PASSWORD=${NEXTCLOUD_ADMIN_PASSWORD}
      - NEXTCLOUD_TRUSTED_DOMAINS=${NEXTCLOUD_TRUSTED_DOMAINS}
#=== EMAIL SETTINGS BELOW DO NOT SEEM TO WORK UNDER DOCKER ===
#=== THEY ARE LEFT FOR REFERENCE ONLY. DO NOT CONFIGURE ON THIS FILE BUT RATHER CONFIGURE IN THE NEXTCLOUD BASIC SETTINS OF THE WEB GUI
      #- SMTP_HOST=${SMTP_HOST}
      #- SMTP_SECURE=${SMTP_SECURE}
      #- SMTP_PORT=${SMTP_PORT}
      #- SMTP_AUTHTYPE=${SMTP_AUTHTYPE}
      #- SMTP_NAME=${SMTP_NAME}
      #- SMTP_PASSWORD=${SMTP_PASSWORD}
      #- MAIL_FROM_ADDRESS=${MAIL_FROM_ADDRESS}
      #- MAIL_DOMAIN=${MAIL_DOMAIN}
      - OVERWRITEPROTOCOL=https
      #- APACHE_DISABLE_REWRITE_IP=1
#Uncomment and set to Traefik IP range
      - TRUSTED_PROXIES=${TRUSTED_PROXIES}
    env_file:
      - db.env
    depends_on:
      - nextcloud_redis
      - nextcloud_db
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cloud.entrypoints=http"
      - "traefik.http.routers.cloud.rule=Host(`${HOST}.${DOMAIN}`)"
      - "traefik.http.routers.cloud.middlewares=cloud-https-redirect"
      - "traefik.http.routers.cloud-secure.middlewares=cloud"
      - "traefik.http.routers.cloud-dav.middlewares=cloud-dav"
      - "traefik.http.routers.cloud-secure.entrypoints=https"
      - "traefik.http.routers.cloud-secure.rule=Host(`${HOST}.${DOMAIN}`)"
      - "traefik.http.routers.cloud-secure.tls=true"
      - "traefik.http.routers.cloud-secure.tls.certresolver=le"
      - "traefik.http.routers.cloud-secure.service=cloud"
      - "traefik.http.services.cloud.loadbalancer.server.port=80"
      - "traefik.docker.network=proxy"

# MIddleware definitions
      - "traefik.http.middlewares.cloud-https-redirect.redirectscheme.scheme=https"

# Middleware cloud adds additional headers:
      - "traefik.http.middlewares.cloud.headers.customFrameOptionsValue=SAMEORIGIN"
      - "traefik.http.middlewares.cloud.headers.framedeny=true"
      - "traefik.http.middlewares.cloud.headers.sslredirect=true"
      - "traefik.http.middlewares.cloud.headers.STSIncludeSubdomains=true"
      - "traefik.http.middlewares.cloud.headers.STSPreload=true"
      - "traefik.http.middlewares.cloud.headers.stsSeconds=315360000"
      - "traefik.http.middlewares.cloud.headers.forceSTSHeader=true"
      - "traefik.http.middlewares.cloud.headers.sslProxyHeaders.X-Forwarded-Proto=https"
# Middleware cloud-dav replaces .well-known paths for caldav and carddav with proper nextcloud path
      - "traefik.http.middlewares.cloud-dav.redirectregex.regex=https://(.*)/.well-known/(card|cal)dav"
      - "traefik.http.middlewares.cloud-dav.redirectregex.replacement=https://(.*)/.well-known/(card|cal)dav"
      - "traefik.http.middlewares.cloud-dav.redirectregex.permanent=true"

volumes:
  db:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./db

  db_backups:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./db_backups


  redis:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./redis

  nextcloud:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./nextcloud

#Uncomment below to use NFS for nextcloud volume
    #driver: local
    #driver_opts:
      #type: nfs
      #o: addr=192.168.xxx.xxx,nolock,soft,rw
      #device: :/mnt/nextcloud

#Uncomment below to use SMB volume for nextcloud storage
  #smb:
    #driver_opts:
      #type: cifs
      #o: vers=3.02,mfsymlinks,username=smbuser,password=smbpass,domain=smbdomain,file_mode=0777,dir_mode=0777,iocharset=utf8
      #device: "//192.168.xxx.xxx/nextcloud"

  #db_backups:
#Uncomment below to use NFS for nextcloud volume
    #driver: local
    #driver_opts:
      #type: nfs
      #o: addr=192.168.xxx.xxx,nolock,soft,rw
      #device: :/mnt/nextcloud

#Uncomment below to use SMB volume
  #smb:
    #driver_opts:
      #type: cifs
      #o: vers=3.02,mfsymlinks,username=smbuser,password=smbpass,domain=smbdomain,file_mode=0777,dir_mode=0777,iocharset=utf8
      #device: "//192.168.xxx.xxx/nextcloud"


