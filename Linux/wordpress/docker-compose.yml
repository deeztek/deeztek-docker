version: '3.3'

networks:
  proxy:
    external: true


services:
  wordpress_db:
    image: mysql:5.7
    container_name: wordpress_db
    logging:
      options:
        max-size: 10m
    volumes:
      - ./db_data:/var/lib/mysql
      - ./db_backups:/db_backups
    restart: always
    environment:
      PUID: ${PUID}
      GUID: ${GUID}
      MYSQL_ROOT_PASSWORD: ${MYSQLROOTPASSWORD}
      MYSQL_DATABASE: ${MYSQLDATABASE}
      MYSQL_USER: ${MYSQLUSER}
      MYSQL_PASSWORD: ${MYSQLPASSWORD}

    networks: 
      - proxy

  wordpress:
    depends_on:
      - wordpress_db
    image: wordpress:latest
    container_name: wordpress
    logging:
      options:
        max-size: 10m
    #ports:
      #- "8000:80"
    expose:
      - 80
    restart: always
    environment:
      WORDPRESS_DB_HOST: wordpress_db:3306
      WORDPRESS_DB_USER: ${MYSQLUSER}
      WORDPRESS_DB_PASSWORD: ${MYSQLPASSWORD}
      WORDPRESS_DB_NAME: ${MYSQLDATABASE}
      WORDPRESS_CONFIG_EXTRA: |
        define('WP_HOME', 'http://${HOST}.${DOMAIN}');
        define('WP_SITEURL', 'http://${HOST}.${DOMAIN}');
    volumes:
      - ./wordpress:/var/www/html      
    networks:
      - proxy

    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"

      # Routers
      - "traefik.http.routers.wp.entrypoints=http"
      - "traefik.http.routers.wp.rule=Host(`${HOST}.${DOMAIN}`)"
      - "traefik.http.routers.wp.middlewares=wp-https-redirect"
      - "traefik.http.routers.wp-secure.entrypoints=https"
      - "traefik.http.routers.wp-secure.rule=Host(`${HOST}.${DOMAIN}`)"
      - "traefik.http.routers.wp-secure.tls=true"
      #- "traefik.http.routers.wp-secure.tls.certresolver=le"
      - "traefik.http.routers.wp-secure.service=wp"

      # Service definition
      - "traefik.http.services.wp.loadbalancer.server.port=80"

      # Middleware definitions
      - "traefik.http.middlewares.wp-https-redirect.redirectscheme.scheme=https"

      - "traefik.passHostHeader=true"

      # Watchtower
      #- "com.centurylinklabs.watchtower.enable=true"



  wordpress_db_cron:
    image: 'mcuadros/ofelia:latest'
    container_name: wordpress_db_cron
    environment:
      - "TZ=$TZ"
    volumes:
      # the ofelia config file
      - ./ofelia_config/config.ini:/etc/ofelia/config.ini
      # your docker reg credentials
      #- /home/centos/.docker/config.json:/root/.docker/config.json
      # the docker socket so ofelia can docker run ...
      - /var/run/docker.sock:/var/run/docker.sock
      # if you want to write a log for eace execution and view logs on the log -> I recommend to set this value
      - ./ofelia_logs:/tmp/logs
    restart: unless-stopped

#Do not enable below unless you are connecting to an existing NFS share
#volumes:
  #db_backups:
    #driver: local
    #driver_opts:
      #type: nfs
      #o: addr=192.168.xxx.xxx,nolock,soft,rw
      #device: :/mnt/dbbackups

#Do not enable below unless you are connecting to an existing CIFS/SMB share
  #db_backups:
    #driver_opts:
      #type: cifs
      #o: vers=3.02,mfsymlinks,username=smbuser,password=smbpass,domain=SMBDOMAIN,file_mode=0777,dir_mode=0777,iocharset=utf8
      #device: "//192.168.xxx.xxx/backups/wp"


