global

# log to sidecar rsyslog container
# with syslog facility to accomplish rsyslog-alpine cfg
log exchange_rsyslog syslog

maxconn 20480
############# IMPORTANT #################################
## DO NOT SET CHROOT OTHERWISE YOU HAVE TO CHANGE THE  ##
## acme-http01-webroot.lua file                        ##
# chroot /jail                                         ##
 #########################################################
lua-load /etc/haproxy/acme-http01-webroot.lua
#




# Default ciphers to use on SSL-enabled listening sockets.
# For more information, see ciphers(1SSL). This list is from:
# https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
#old ssl
#ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+
3DES:!aNULL:!MD5:!DSS
#ssl-default-bind-options no-sslv3
#new ssl
ssl-default-bind-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA2
0-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA
-AES128-SHA256:ECDHE-RSA-AES128-SHA256
ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

tune.ssl.default-dh-param 2048

listen stats
bind 0.0.0.0:8081 name stats ssl crt /etc/haproxy/certs/ #Listen on all IP's on port 8081
mode http
balance
timeout client 5000
timeout connect 4000
timeout server 30000
log exchange_rsyslog syslog
capture request header Host len 32
capture request header User-Agent len 64
capture response header Content-Length len 10
log-format %ci:%cp\ [%t]\ %ft\ %b/%s\ %Tq/%Tw/%Tc/%Tr/%Tt\ %ST\ %B\ %CC\ %CS\ %tsc\ %ac/%fc/%bc/%sc/%rc\ %sq/%bq\ %hr\ %hs\ {%sslv
/%sslc/%[ssl_fc_sni]/%[ssl_fc_session_id]}\ "%[capture.req.method]\ %[capture.req.hdr(0)]%[capture.req.uri]\ HTTP/1.1"
maxconn 1000
acl ssl_connection ssl_fc
http-request redirect scheme https code 302 unless ssl_connection
http-request redirect scheme https code 301 if !{ ssl_fc }

#This is the virtual URL to access the stats page
stats uri /haproxy?stats

#Authentication realm. This can be set to anything. Escape space characters with a backslash.
stats realm HAProxy\ Statistics

#The user/pass you want to use. Change this password!
stats auth statsusername:statspassword

#This allows you to take down and bring up back end servers.
#This will produce an error on older versions of HAProxy.
stats admin if TRUE


defaults
log global
mode http
option httplog
option dontlognull
option http-keep-alive
option prefer-last-server
option forwardfor
no option httpclose
no option http-server-close
no option httpclose
#no option http-tunnel
balance leastconn
default-server inter 3s rise 2 fall 3
timeout client 600s
timeout http-request 10s
timeout connect 4s
timeout server 60s
#timeout check 10s
# errorfile 400 /etc/haproxy/errors/400.http
# errorfile 403 /etc/haproxy/errors/403.http
# errorfile 408 /etc/haproxy/errors/408.http
# errorfile 500 /etc/haproxy/errors/500.http
# errorfile 502 /etc/haproxy/errors/502.http
# errorfile 503 /etc/haproxy/errors/503.http
# errorfile 504 /etc/haproxy/errors/504.http

frontend ft_exchange_https

bind 0.0.0.0:80 name http
    acl url_acme_http01 path_beg /.well-known/acme-challenge/
    http-request use-service lua.acme-http01 if METH_GET url_acme_http01

bind 0.0.0.0:443 name https ssl crt /etc/haproxy/certs/
capture request header Host len 32
capture request header User-Agent len 64
capture response header Content-Length len 10
log-format %ci:%cp\ [%t]\ %ft\ %b/%s\ %Tq/%Tw/%Tc/%Tr/%Tt\ %ST\ %B\ %CC\ %CS\ %tsc\ %ac/%fc/%bc/%sc/%rc\ %sq/%bq\ %hr\ %hs\ {%sslv
/%sslc/%[ssl_fc_sni]/%[ssl_fc_session_id]}\ "%[capture.req.method]\ %[capture.req.hdr(0)]%[capture.req.uri]\ HTTP/1.1"

#option socket-stats
#stats uri /haproxy?stats
#stats realm Strictly\ Private
#stats auth username:fQowUHk6tNBmtVbzh3by

maxconn 1000
#tcp-request content accept if { ssl_fc_has_crt }
acl ssl_connection ssl_fc
# acl host_mail hdr(Host) -i remote.domain.com
# acl host_assets hdr(Host) -i assets.domain.com
# acl host_nc hdr(Host) -i nc.domain.com
# acl host_oc hdr(Host) -i oc.domain.com
# acl host_pbx hdr(Host) -i pbx.domain.com
acl path_slash path /
acl path_autodiscover path_beg -i /Autodiscover/Autodiscover.xml
acl path_activesync path_beg -i /Microsoft-Server-ActiveSync
acl path_ews path_beg -i /ews/
acl path_owa path_beg -i /owa/
acl path_oa path_beg -i /rpc/rpcproxy.dll
acl path_ecp path_beg -i /ecp/
acl path_oab path_beg -i /oab/
acl path_mapi path_beg -i /mapi/
acl path_check path_end -i HealthCheck.htm
http-request deny if path_check
http-request redirect scheme https code 302 unless ssl_connection
http-request redirect scheme https code 301 if !{ ssl_fc }
# http-request redirect location /owa/ code 302 if path_slash host_mail
http-request redirect location /owa/ code 302 if path_slash
use_backend bk_exchange_https_autodiscover if path_autodiscover
use_backend bk_exchange_https_activesync if path_activesync
use_backend bk_exchange_https_ews if path_ews
use_backend bk_exchange_https_owa if path_owa
use_backend bk_exchange_https_oa if path_oa
use_backend bk_exchange_https_ecp if path_ecp
use_backend bk_exchange_https_oab if path_oab
use_backend bk_exchange_https_mapi if path_mapi
# use_backend bk_assets if host_assets
# use_backend bk_nc if host_oc
# use_backend bk_nc if host_nc
# use_backend bk_pbx if host_pbx
default_backend bk_exchange_https_default

backend bk_exchange_https_activesync
option httpchk GET /Microsoft-Server-ActiveSync/HealthCheck.htm
http-check expect string 200\ OK

server server1 host1.domain.tld:443 ssl verify none check-sni domain.tld sni str(domain.tld) maxconn 1000 check
server server2 host2.domain.tld:443 ssl verify none maxconn 1000 check backup


backend bk_exchange_https_autodiscover
option httpchk GET /Autodiscover/HealthCheck.htm

http-check expect string 200\ OK

server server1 host1.domain.tld:443 ssl verify none check-sni domain.tld sni str(domain.tld) maxconn 1000 check
server server2 host2.domain.tld:443 ssl verify none maxconn 1000 check backup



backend bk_exchange_https_ecp
option httpchk GET /ECP/HealthCheck.htm
http-check expect string 200\ OK

server server1 host1.domain.tld:443 ssl verify none check-sni domain.tld sni str(domain.tld) maxconn 1000 check
server server2 host2.domain.tld:443 ssl verify none maxconn 1000 check backup



backend bk_exchange_https_ews
option httpchk GET /EWS/HealthCheck.htm
http-check expect string 200\ OK

server server1 host1.domain.tld:443 ssl verify none check-sni domain.tld sni str(domain.tld) maxconn 1000 check
server server2 host2.domain.tld:443 ssl verify none maxconn 1000 check backup



backend bk_exchange_https_mapi
option httpchk GET /mapi/HealthCheck.htm
http-check expect string 200\ OK
timeout server 600s

server server1 host1.domain.tld:443 ssl verify none check-sni domain.tld sni str(domain.tld) maxconn 1000 check
server server2 host2.domain.tld:443 ssl verify none maxconn 1000 check backup


backend bk_exchange_https_oab
option httpchk GET /OAB/HealthCheck.htm
http-check expect string 200\ OK

server server1 host1.domain.tld:443 ssl verify none check-sni domain.tld sni str(domain.tld) maxconn 1000 check
server server2 host2.domain.tld:443 ssl verify none maxconn 1000 check backup


backend bk_exchange_https_oa
option httpchk GET /RPC/HealthCheck.htm
http-check expect string 200\ OK
timeout server 600s

server server1 host1.domain.tld:443 ssl verify none check-sni domain.tld sni str(domain.tld) maxconn 1000 check
server server2 host2.domain.tld:443 ssl verify none maxconn 1000 check backup


backend bk_exchange_https_owa
option httpchk GET /owa/HealthCheck.htm
http-check expect string 200\ OK
server server1 host1.domain.tld:443 ssl verify none check-sni domain.tld sni str(domain.tld) maxconn 1000 check
server server2 host2.domain.tld:443 ssl verify none maxconn 1000 check backup


backend bk_exchange_https_default
http-request set-header Connection keep-alive
http-request set-header Host domain.tld
http-request set-header X-Forwarded-Proto https
timeout server 60s

server server1 host1.domain.tld:443 ssl verify none check-sni domain.tld sni str(domain.tld) maxconn 1000 check
server server2 host2.domain.tld:443 ssl verify none maxconn 1000 check backup


defaults
option dontlognull # Do not log connections with no requests
option redispatch # Try another server in case of connection failure
option contstats # Enable continuous traffic statistics updates
retries 3 # Try to connect up to 3 times in case of failure
timeout connect 5s # 5 seconds max to connect or to stay in queue
timeout http-keep-alive 1s # 1 second max for the client to post next request
timeout http-request 15s # 15 seconds max for the client to send a request
timeout queue 30s # 30 seconds max queued on load balancer
timeout tarpit 1m # tarpit hold tim
backlog 10000 # Size of SYN backlog queue

balance roundrobin #alctl: load balancing algorithm
mode tcp #alctl: protocol analyser
option tcplog #alctl: log format
log global #alctl: log activation
timeout client 300s #alctl: client inactivity timeout
timeout server 300s #alctl: server inactivity timeout
default-server inter 3s rise 2 fall 3 #alctl: default check parameters



frontend ft_exchange_SMTP
bind 0.0.0.0:2525 name smtp
maxconn 10000
default_backend bk_exchange_SMTP

backend bk_exchange_SMTP
server server1 host1.domain.tld:2525 maxconn 10000 check
server server2 host2.domain.tld:2525 maxconn 10000 check backup

#frontend ft_exchange_SMTP_Secure
#bind 0.0.0.0:587 name smtpssl
#maxconn 10000
#default_backend bk_exchange_SMTP_Secure

#backend bk_exchange_SMTP_Secure
#server server1 192.168.xxx.xxx:587 maxconn 10000 check
#server server2 192.168.xxx.xxx:587 maxconn 10000 check backup

#frontend ft_exchange_IMAP_Secure
#bind 0.0.0.0:993 name imapssl
#maxconn 10000
#default_backend bk_exchange_IMAP_Secure

#backend bk_exchange_IMAP_Secure
#server server1 192.168.xxx.xxx:993 maxconn 10000 check
#server server2 192.168.xxx.xxx:993 maxconn 10000 check backup

# frontend ft_exchange_POP3
# bind 0.0.0.0:110 name pop3
# maxconn 10000

#frontend ft_exchange_IMAP_Secure
#bind 0.0.0.0:993 name imapssl
#maxconn 10000
#default_backend bk_exchange_IMAP_Secure

#backend bk_exchange_IMAP_Secure
#server server1 192.168.xxx.xxx:993 maxconn 10000 check
#server server2 192.168.xxx.xxx:993 maxconn 10000 check backup

# frontend ft_exchange_POP3
# bind 0.0.0.0:110 name pop3
# maxconn 10000
# default_backend bk_exchange_POP3
#
# backend bk_exchange_POP3
# server server1 192.168.xxx.xxx:110 maxconn 10000 check
# server server2 192.168.xxx.xxx:110 maxconn 10000 check backup
#
# frontend ft_exchange_POP3_Secure
# bind 0.0.0.0:995 name pop3ssl
# maxconn 10000
# default_backend bk_exchange_POP3_Secure
#
# backend bk_exchange_POP3_Secure
# server server1 192.168.xxx.xxx:995 maxconn 10000 check
# server server2 192.168.xxx.xxx:995 maxconn 10000 check backup
